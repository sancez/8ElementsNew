webAppCRUDOperation
************
index.cshtml
************

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<script src="~/Scripts/jquery-3.4.1.min.js"></script>

<script type="text/javascript">
            $(document).ready(function(){
                LoadEmployee();
            });
    function EditEmployee(employeeId) {
       
        $.ajax({
            async: true,
            type: 'GET',
            url: '/Employee/EditEmployee' ,
            data: { employeeId: employeeId },
            dataType: 'JSON',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $('#txtFirstname').val(data.FirstName);
                $('#txtLastname').val(data.LastName);
                $('#Department').val(data.Department);
                $('#txtJobType').val(data.JobType);
                $('#txtSalary').val(data.Salary);
                $('#Cities').val(data.CityId);
                $('#txtEmployeeId').val(employeeId);
                $('#btnSaveUpdate').val("Upddate Employee");
            },
            error: function () {
                alert('There is some problem with edit operation.');
            }

        });
    }
    function DeleteEmployee(employeeId) {
        var employeeId = { employeeId : employeeId };
            confirm('Are You Sure You Want To Delte The Employee');
        $.ajax({
            async: true,
            type: 'POST',
            url: '/Employee/DeleteEmployee',
            data: JSON.stringify(employeeId),
            contentType: 'application/json;charset=utf-8',
            success: function (data) {
                if (data.Success) {
                    alert(data.Message);
                    LoadEmployee();
                } else {
                    alert(data.Message);
                }
            },
            error: function () {
                alert('There Is Some Problem With Delete Operation.');
            }
        });
    }
    function ResetEmployee() {
        $('#txtDepartment').val("");
        $('#txtEmployeeId').val("");
        $('#txtFirstName').val("");
        $('#txtJobType').val("");
        $('#txtLastName').val("");
        $('#txtSalary').val("");
        $('#ErrorMessage').val("");
        $("#btnSaveUpdate").val("Add Employee11");
        $("#Cities").val("1");
    }
    function AddEmployee() {
       var EmployeeViewModel = {
            EmployeeId: $('#txtEmployeeId').val(),
            FirstName: $('#txtFirstName').val(),
            LastName: $('#txtLastName').val(),
            Department: $('#txtDepartment').val(),
            JobType: $('#txtJobType').val(),
            Salary: $('#txtSalary').val(),
           CityId: $('#Cities').val()
        }

        var errorMessage = "";

        $.ajax({
            async: true,
            type: 'POST',
            url: '/Employee/AddUpdateEmployee',
            data: JSON.stringify(EmployeeViewModel),
            dataType: 'JSON',
            contentType: 'application/json;charset=utf-8',
            success: function (data) {
                if (data.Success) {
                    alert(data.Message);
                    LoadEmployee();
                    ResetEmployee();
                } else {
                    $.each(data.errorList, function (index, value) {
                        errorMessage += value + '<br>';
                    });
                    $('#ErrorMessage').empty();
                    $('#ErrorMessage').append(errorMessage);
                }
            },
            error: function () {
                alert('There is Some Problem to add update employee..');
            }
        });
    }

    function LoadEmployee() {
        var EmployeeVar = "";
                $.ajax({
                    async: true,
                    type: 'GET',
                    url: '/Employee/GetAllEmployee',
                    dataType: 'JSON',
                    contentType: 'application/json;charset=utf-8',
                    success: function (response) {
                        if (response.Success) {
                            $('#tableEmployee').empty();
                            $.each(response.data,
                                function (index, value) {
                                    EmployeeVar += '<tr><td>' + value.FirstName +
                                        '</td><td>' + value.LastName +
                                        '</td><td>' + value.Department +
                                        '</td><td>' + value.Salary +
                                        '</td><td>' + value.Name +
                                        '</td><td>' + '<input type="button" value="Edit" name="Edit" onclick="EditEmployee(' + value.EmployeId + ')">' +
                                        '</td><td>' + '<input type="button" value="Delete" name="Delete" onclick="DeleteEmployee(' + value.EmployeId + ')">'+'</td></tr>';
                                       
                                 
                                });
    
                            $('#tableEmployee').find('tr:gt(0)').remove();
                            $('#tableEmployee').append(EmployeeVar);
                        }
                    },
                    error: function () {
                        alert  ('there is problem to employee alert function');
                    }
                });
    }
</script>
<input type="hidden" value="0" id="txtEmployeeId" />
<table style="width:100%" class="table-bordered">
    <thead>
        <tr>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Departmen</th>
            <th>Job type</th>
            <th>Salary</th>
            <th>City</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody id="tableEmployee">
       
    </tbody>
 
</table>
<br>
<br>    

<input type="hidden"  value="" id="txtEmployeeId" />
<br />
<div class="text-danger" id="ErrorMessage">

</div>

<table>
    <tr>
        <td>
            First Name :
        </td>
        <td>
            <input type="text" name="FirstName" id="txtFirstName" />
        </td>
    </tr>
    <tr>
        <td>
            Last Name :
        </td>
        <td>
            <input type="text" name="LastName" id="txtLastName" />
        </td>
    </tr>
    <tr>
        <td>
            Department :
        </td>
        <td>
            <input type="text" name="Department" id="txtDepartment" />
        </td>
    </tr>
    <tr>
        <td>
            Job Type :
        </td>
        <td>
            <input type="text" name="JobType" id="txtJobType" />
        </td>
    </tr>
    <tr>
        <td>
            Salary :
        </td>
        <td>
            <input type="text" name="Salary" id="txtSalary" />
        </td>
    </tr>
    <tr>
        <td>City : </td>
        <td>@Html.DropDownList("Cities", ViewBag.Cities as IEnumerable<SelectListItem>)</td>
    </tr>
    <tr>
        <td>
        </td>
        <td>
            <table>    
               <tr>
                   <td> 
                       <input type="button" id="btnSaveUpdate" value="Add Employee11" onclick="AddEmployee()"/>
                   </td> 
                   <td>
                       <input type="button" value="Reset Employee" onclick="ResetEmployee()" />
                   </td>
               </tr>
            </table>    
        </td>
    </tr>

</table>


**********************
EmployeeController.cs
**********************
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using WebAPPCRUDOperation.Models;
using WebAPPCRUDOperation.ViewModel;

namespace WebAPPCRUDOperation.Controllers
{
    public class EmployeeController : Controller
    {
        private EmployeeDBEntities objEmployeeDbEntities;
        public EmployeeController()
        {
            objEmployeeDbEntities = new EmployeeDBEntities();
        }
        // GET: Employee
        public ActionResult Index()
        {
            ViewBag.Cities = (from obj in objEmployeeDbEntities.Cities
                              select new SelectListItem()
                              { 
                                Text = obj.Name,
                                Value = obj.CityId.ToString()
                              }).ToList();
            return View();
        }

        public ActionResult GetAllEmployee()
        {
            var employeeRecord = (from objEmp1 in objEmployeeDbEntities.Employees join
                                  objCities in objEmployeeDbEntities.Cities on
                                  objEmp1.CityId equals objCities.CityId
                                  select new 
                                  {
                                      EmployeId = objEmp1.EmployeeId,
                                      FirstName = objEmp1.FirstName,
                                      LastName = objEmp1.LastName,
                                      Department = objEmp1.Department,
                                      Jobtype = objEmp1.JobType,
                                      Salary = objEmp1.Salary,
                                      CityId1 = objEmp1.CityId,
                                      Name = objCities.Name
                                  }
                              ).ToList();
            return Json(new { Success =  true,data = employeeRecord}, JsonRequestBehavior.AllowGet);
        }

        [HttpPost]
        public JsonResult AddUpdateEmployee(EmployeeViewModel objEmployeeViewModel)
        {
            string Message = "Data Successfully Updated";
            if (!ModelState.IsValid)
            {
                var errorList = (from item in ModelState
                                 where item.Value.Errors.Any()
                                 select item.Value.Errors[0].ErrorMessage).ToList();

                return Json(new { success = false,Message ="Some Problem in validation",errorList});
            }
            Employee objEmployee = objEmployeeDbEntities.Employees.SingleOrDefault(model => model.EmployeeId == objEmployeeViewModel.EmployeeId) ?? new Employee() ;
            objEmployee.EmployeeId = objEmployeeViewModel.EmployeeId;
            objEmployee.FirstName = objEmployeeViewModel.FirstName;
            objEmployee.LastName = objEmployeeViewModel.LastName;
            objEmployee.Department = objEmployeeViewModel.Department;
            objEmployee.JobType = objEmployeeViewModel.JobType;
            objEmployee.Salary = objEmployeeViewModel.salary;
            objEmployee.CityId = objEmployeeViewModel.CityId;

            if (objEmployeeViewModel.EmployeeId == 0)
            {
                Message = "Data SuccessFully Added..";
                objEmployeeDbEntities.Employees.Add(objEmployee);
            }

            objEmployeeDbEntities.SaveChanges();  
            return Json(new { Success = true, Message = Message },JsonRequestBehavior.AllowGet);
        }

        public JsonResult EditEmployee(int employeeId)
        {
            return Json(objEmployeeDbEntities.Employees.SingleOrDefault(Model => Model.EmployeeId == employeeId),
                JsonRequestBehavior.AllowGet);
        }

        [HttpPost]
        public JsonResult DeleteEmployee(int employeeId)
        {
            Employee objEmployee = 
                objEmployeeDbEntities.Employees.Single(Model => Model.EmployeeId == employeeId);
            objEmployeeDbEntities.Employees.Remove(objEmployee);
            objEmployeeDbEntities.SaveChanges();
            return Json(new { Success = true,Message ="Data Successfully Deleted" },JsonRequestBehavior.AllowGet);
        }
    }
}


******************